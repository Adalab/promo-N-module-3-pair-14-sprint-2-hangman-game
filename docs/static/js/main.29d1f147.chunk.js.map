{"version":3,"sources":["services/api.js","images/favicon-ahorcado.jpg","components/App.js","index.js"],"names":["objectFunctions","callToApi","fetch","then","response","json","responsedata","body","Word","callToApi2","App","useState","introducedLetter","setintroducedLetter","word","setWord","userLetters","setUserLetters","errors","setErrors","solution","setSolution","useEffect","updateSolErr","test","includes","push","className","split","map","letraSoluc","i","findIndex","l","filter","htmlFor","onChange","ev","letter","currentTarget","value","toLowerCase","autoComplete","maxLength","type","name","id","length","ReactDOM","render","document","getElementById"],"mappings":"4LAuBeA,G,MCvBA,IDqBS,CAAEC,UAVR,WAEhB,OAAOC,MAAM,+DACVC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAEL,OADeA,EAAaC,KAAKC,SAKSC,WAnB7B,WAEjB,OAAOP,MAAM,kDACVC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,OAAOA,EAAa,S,OEsJXI,MAxJf,WAEE,MAAgDC,mBAAS,IAAzD,mBAAOC,EAAP,KAAyBC,EAAzB,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAsCJ,mBAAS,IAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAA4BN,mBAAS,IAArC,mBAAOO,EAAP,KAAeC,EAAf,KACA,EAAgCR,mBAAS,IAAzC,mBAAOS,EAAP,KAAiBC,EAAjB,KA0BAC,qBAAU,WACRC,MACC,CAACX,IAEJ,IAAMW,EAAe,WACN,oEACJC,KAAKZ,IACa,KAArBA,GAAgD,MAArBA,IACzBE,EAAKW,SAASb,GACXQ,EAASK,SAASb,KACrBQ,EAASM,KAAKd,GACdS,EAAY,YAAID,KAGbF,EAAOO,SAASb,KACnBM,EAAOQ,KAAKd,GACZO,EAAU,YAAID,OAkDxB,OA5BAI,qBAAU,WACRtB,EAAgBC,YAAYE,MAAK,SAACG,GAAD,OAAkBS,EAAQT,MAC3Da,EAAU,IACVE,EAAY,MACX,IAyBD,sBAAKM,UAAU,OAAf,UACE,iCACE,oBAAIA,UAAU,gBAAd,kCAEF,uBAAMA,UAAU,OAAhB,UACE,oCACE,sBAAKA,UAAU,WAAf,UACE,oBAAIA,UAAU,QAAd,0BACA,oBAAIA,UAAU,UAAd,SA9BYb,EAAKc,MAAM,IACZC,KAAI,SAACC,EAAYC,GAElC,OADcf,EAAYgB,WAAU,SAACC,GAAD,OAAOA,IAAMH,MACpC,EAET,oBAAmBH,UAAU,SAA7B,SACGG,GADH,YAAcC,IAKT,oBAAYJ,UAAU,UAAbI,WAsBd,sBAAKJ,UAAU,WAAf,UACE,oBAAIA,UAAU,QAAd,8BACA,oBAAIA,UAAU,UAAd,SAlBMX,EAAYkB,QAAO,SAACD,GAAD,OAAQnB,EAAKW,SAASQ,MAC1CJ,KAAI,SAACI,GAAD,OAAO,oBAAIN,UAAU,SAAd,SAAwBM,YAmB1C,uBAAMN,UAAU,OAAhB,UACE,uBAAOA,UAAU,QAAQQ,QAAQ,cAAjC,gCAGA,uBACEC,SA/DmB,SAACC,GAC9B,IACMC,EADgBD,EAAGE,cAAcC,MACVC,cAChB,oEACJjB,KAAKc,IACZzB,EAAoByB,GACftB,EAAYS,SAASa,KACxBtB,EAAYU,KAAKY,GACjBrB,EAAeD,KAGjBH,EAAoByB,IAqDZI,aAAa,MACbf,UAAU,cACVgB,UAAU,IACVC,KAAK,OACLC,KAAK,cACLC,GAAG,cACHN,MAAO5B,IAET,uBACA,4BAtHK,4CACHY,KAAKZ,GAGY,KAArBA,GAAgD,MAArBA,EACzBE,EAAKW,SAASb,GACXQ,EAASK,SAASb,GAGd,+DAFA,gBAKJM,EAAOO,SAASb,GAGZ,+DAFA,uCATb,EAFO,oEAuHL,0BAASe,UAAS,sBAAiBT,EAAO6B,QAA1C,UACE,sBAAMpB,UAAU,iBAChB,sBAAMA,UAAU,iBAChB,sBAAMA,UAAU,kBAChB,sBAAMA,UAAU,kBAChB,sBAAMA,UAAU,iBAChB,sBAAMA,UAAU,iBAChB,sBAAMA,UAAU,iBAChB,sBAAMA,UAAU,iBAChB,sBAAMA,UAAU,iBAChB,sBAAMA,UAAU,iBAChB,sBAAMA,UAAU,iBAChB,sBAAMA,UAAU,iBAChB,sBAAMA,UAAU,iBAChB,sBAAMA,UAAU,2BClJ1BqB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.29d1f147.chunk.js","sourcesContent":["// Fichero src/services/api.js\n\nconst callToApi2 = () => {\n  // Llamamos al API\n  return fetch('//random-word-api.herokuapp.com//word?number=1')\n    .then((response) => response.json())\n    .then((responsedata) => {\n      return responsedata[0];\n    });\n};\n\nconst callToApi = () => {\n  // Llamamos al API\n  return fetch('https://palabras-aleatorias-public-api.herokuapp.com/random')\n    .then((response) => response.json())\n    .then((responsedata) => {\n      const result = responsedata.body.Word;\n      return result;\n    });\n};\n\nconst objectFunctions = { callToApi: callToApi, callToApi2: callToApi2 };\n\nexport default objectFunctions;\n","export default __webpack_public_path__ + \"static/media/favicon-ahorcado.01a205ca.jpg\";","import '../styles/App.scss';\nimport ahorcado from '../images/favicon-ahorcado.jpg';\nimport { useEffect, useState } from 'react';\nimport objectFunctions from '../services/api';\n\nfunction App() {\n  //estados\n  const [introducedLetter, setintroducedLetter] = useState('');\n  const [word, setWord] = useState('');\n  const [userLetters, setUserLetters] = useState([]);\n  const [errors, setErrors] = useState([]);\n  const [solution, setSolution] = useState([]);\n\n  //funciones\n  const functionGiveFeedback = () => {\n    const patt = /^[a-zA-Záéíóúñü]{1}$/;\n    if (!patt.test(introducedLetter)) {\n      return 'ERROR: debes escribir una letra del abecedario castellano';\n    } else {\n      if (introducedLetter !== '' && introducedLetter !== ' ') {\n        if (word.includes(introducedLetter)) {\n          if (!solution.includes(introducedLetter)) {\n            return 'Has acertado!';\n          } else {\n            return 'Ya has escrito esta letra antes y si es parte de la palabra.';\n          }\n        } else {\n          if (!errors.includes(introducedLetter)) {\n            return 'Has fallado... Prueba otra vez!';\n          } else {\n            return 'Ya has escrito esta letra antes y no es parte de la palabra.';\n          }\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    updateSolErr();\n  }, [introducedLetter]);\n\n  const updateSolErr = () => {\n    const patt = /^[a-zA-ZáéíóúñüÁÉÍÓÚÜ]{1}$/;\n    if (patt.test(introducedLetter)) {\n      if (introducedLetter !== '' && introducedLetter !== ' ') {\n        if (word.includes(introducedLetter)) {\n          if (!solution.includes(introducedLetter)) {\n            solution.push(introducedLetter);\n            setSolution([...solution]);\n          }\n        } else {\n          if (!errors.includes(introducedLetter)) {\n            errors.push(introducedLetter);\n            setErrors([...errors]);\n          }\n        }\n      }\n    }\n  };\n\n  const handleIntroducedLetter = (ev) => {\n    const initialLetter = ev.currentTarget.value;\n    const letter = initialLetter.toLowerCase();\n    const patt = /^[a-zA-ZáéíóúñüÁÉÍÓÚÜ]{1}$/;\n    if (patt.test(letter)) {\n      setintroducedLetter(letter);\n      if (!userLetters.includes(letter)) {\n        userLetters.push(letter);\n        setUserLetters(userLetters);\n      }\n    } else {\n      setintroducedLetter(letter);\n    }\n  };\n\n  useEffect(() => {\n    objectFunctions.callToApi().then((responsedata) => setWord(responsedata));\n    setErrors([]);\n    setSolution([]);\n  }, []);\n\n  const renderSolutionLetters = () => {\n    const wordLetters = word.split('');\n    return wordLetters.map((letraSoluc, i) => {\n      const found = userLetters.findIndex((l) => l === letraSoluc);\n      if (found >= 0) {\n        return (\n          <li key={`e_${i}`} className=\"letter\">\n            {letraSoluc}\n          </li>\n        );\n      } else {\n        return <li key={i} className=\"letter\"></li>;\n      }\n    });\n  };\n\n  const renderErrorLetters = () => {\n    const found = userLetters.filter((l) => !word.includes(l));\n    return found.map((l) => <li className=\"letter\">{l}</li>);\n  };\n\n  //return\n  return (\n    <div className=\"page\">\n      <header>\n        <h1 className=\"header__title\">Juego del ahorcado</h1>\n      </header>\n      <main className=\"main\">\n        <section>\n          <div className=\"solution\">\n            <h2 className=\"title\">Solución:</h2>\n            <ul className=\"letters\">{renderSolutionLetters()}</ul>\n          </div>\n          <div className=\"feedback\">\n            <h2 className=\"title\">Letras falladas:</h2>\n            <ul className=\"letters\">{renderErrorLetters()}</ul>\n          </div>\n          <form className=\"form\">\n            <label className=\"title\" htmlFor=\"last-letter\">\n              Escribe una letra:\n            </label>\n            <input\n              onChange={handleIntroducedLetter}\n              autoComplete=\"off\"\n              className=\"form__input\"\n              maxLength=\"1\"\n              type=\"text\"\n              name=\"last-letter\"\n              id=\"last-letter\"\n              value={introducedLetter}\n            />\n            <br />\n            <p>{functionGiveFeedback()}</p>\n          </form>\n        </section>\n        <section className={`dummy error-${errors.length}`}>\n          <span className=\"error-13 eye\"></span>\n          <span className=\"error-12 eye\"></span>\n          <span className=\"error-11 line\"></span>\n          <span className=\"error-10 line\"></span>\n          <span className=\"error-9 line\"></span>\n          <span className=\"error-8 line\"></span>\n          <span className=\"error-7 line\"></span>\n          <span className=\"error-6 head\"></span>\n          <span className=\"error-5 line\"></span>\n          <span className=\"error-4 line\"></span>\n          <span className=\"error-3 line\"></span>\n          <span className=\"error-2 line\"></span>\n          <span className=\"error-1 line\"></span>\n          <span className=\"error-0 line\"></span>\n        </section>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n\n//PENDIENTE---------------------\n//useState: array (número de errores) pintar errores en muñeco\n\n//Acción tras solución correcta --> animacion\n//Bonus: cambio idioma\n\n//convertir en conponentes\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}